---
import i18next, { changeLanguage, t } from "i18next";
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/PageLayout.astro";
import { localizePath } from "astro-i18next";
import { filenameToDateString } from "@/util/markdown";
import { Trans } from "astro-i18next/components";

changeLanguage("ja");

let latestPrivacyPolicy = await getCollection("privacy", ({ data }) => data.language === i18next.language).then((collection) => collection.sort((a, b) => new Date(filenameToDateString(a.slug)) <
    new Date(filenameToDateString(b.slug))
    ? 1
    : -1)[0]);
if (!latestPrivacyPolicy) {
    latestPrivacyPolicy = await getCollection("privacy").then((collection) => collection.sort((a, b) => new Date(filenameToDateString(a.slug)) <
        new Date(filenameToDateString(b.slug))
        ? 1
        : -1)[0]);
}
const { Content } = await latestPrivacyPolicy.render();
---

<PageLayout title={t("privacy.title")} description={t("privacy.description")}>
  <Content />
  <p>
    <Trans i18nKey="privacy.archive-text">
      The archive of all previous privacy policy can be checked at the
      <a
        href={localizePath("/privacy/archive")}
        aria-label={t("privacy.archive-aria")}
      >
        archive of the privacy policy pages
      </a>.
    </Trans>
  </p>
  <p>
    {
      t("privacy.last-updated", {
        date: new Date(
          filenameToDateString(latestPrivacyPolicy.slug)
        ).toLocaleDateString(i18next.language, {
          year: "numeric",
          month: "long",
          day: "numeric",
        }),
      })
    }
  </p>
</PageLayout>
